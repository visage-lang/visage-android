/*
 * Copyright (c) 2010-2011, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.android.widget;

import android.widget.Adapter;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.AdapterView.OnItemSelectedListener;

import visage.android.view.ViewGroup;

/**
 * @author Alain BÃ©arez <A@cua.li>
 */
public abstract class AdapterView extends ViewGroup {
    public-read var androidAdapterView = bind androidDelegate as android.widget.AdapterView;

    public var adapter :Adapter on replace {
        if (isInitialized(adapter)) updateProperty(function() {
            androidAdapterView.setAdapter(adapter)
        })
    }
    public var onItemClick:function() on replace {
        if (isInitialized(onItemClick)) updateProperty(function() {
            if (onItemClick != null) {
                def clickFunc = onItemClick;
                androidAdapterView.setOnItemClickListener(OnItemClickListener {
                    override function onItemClick(p, v, pos, i) {
                        clickFunc();
                    }
                });
            } else {
                androidAdapterView.setOnItemClickListener(null);
            }
        })
    }
    public var onItemLongClick:function():Boolean on replace {
        if (isInitialized(onItemLongClick)) updateProperty(function() {
            if (onItemLongClick != null) {
                def clickFunc = onItemLongClick;
                androidAdapterView.setOnItemLongClickListener(OnItemLongClickListener {
                    override function onItemLongClick(p, v, pos, i) {
                        clickFunc();
                    }
                });
            } else {
                androidAdapterView.setOnItemLongClickListener(null);
            }
        })
    }
    public var onItemSelected :function(:android.widget.AdapterView,:android.view.View,:Integer,:Long):Void on replace {
        if (isInitialized(onItemSelected)) updateProperty(changeListener)
    }
    public var onNothingSelected :function(:android.widget.AdapterView):Void on replace {
        if (isInitialized(onNothingSelected)) updateProperty(changeListener)
    }
    function doNoSelect(parent :android.widget.AdapterView, view :android.view.View, position :Integer, id :Long):Void {}
    function doNothing(parent :android.widget.AdapterView):Void {}
    function changeListener() {
        if ((null == onItemSelected) and (null == onNothingSelected)) {
            androidAdapterView.setOnItemSelectedListener(null);
        } else {
            /* the following two lines do not compile */
            // incompatible types
            // found   : org.visage.functions.Function4<java.lang.Void,capture#262 of ? extends java.lang.Object,capture#535 of ? extends java.lang.Object,capture#484 of ? extends java.lang.Object,capture#830 of ? extends java.lang.Object>
            // required: org.visage.functions.Function4<java.lang.Void,? super android.widget.AdapterView,? super android.view.View,? super java.lang.Integer,? super java.lang.Long>
            //      var itemFunction = if (null == onItemSelected) then doNoSelect else onItemSelected;
            // incompatible types
            // found   : org.visage.functions.Function1<java.lang.Void,capture#637 of ? extends java.lang.Object>
            // required: org.visage.functions.Function1<java.lang.Void,? super android.widget.AdapterView>
            //      var nothingFunction = if (null == onNothingSelected) then doNothing else onNothingSelected;
            /* explicitly state the function type to avoid yet another compiler error */
            // incompatible types
            // found   : function(:android.widget.AdapterView,:android.view.View,:Integer,:Long):void
            // required: function(:android.widget.AdapterView,:android.view.View,:Integer,:Long):void
            //                itemFunction = onItemSelected
            var itemFunction :function(:android.widget.AdapterView,:android.view.View,:Integer,:Long):Void;
            if (null == onItemSelected) {
                itemFunction = doNoSelect
            } else {
                itemFunction = onItemSelected
            }
            var nothingFunction :function(:android.widget.AdapterView):Void;
            if (null == onNothingSelected) {
                nothingFunction = doNothing
            } else {
                nothingFunction = onNothingSelected
            }
            androidAdapterView.setOnItemSelectedListener(OnItemSelectedListener {
                override function onItemSelected(parent, view, position, id) {
                    itemFunction(parent, view, position, id);
                }
                override function onNothingSelected(parent) {
                    nothingFunction(parent);
                }
            })
        }
    }
}
